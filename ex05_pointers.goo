// go przekazuje argumentu przez wartość, nie przez referencję
// go tworzy kopię zmiennej pod innym adresem w pamięci, ta zmienna będzie na stosie wywołania funkcji

package main

import (
	"fmt"
	"reflect"
)

func main() {
	name := "Sebastian"
	course := "Mastering Go"
	module := 4.3

	// &module - wartość wskaźnika czyli adresu w pamięci; referujemy wartość wskaźnika zmiennej
	ptr := &module

	fmt.Println("Name is set to", name, "and is of type", reflect.TypeOf(name))
	fmt.Println("Course is set to", course, "and is of type", reflect.TypeOf(course))
	fmt.Println("Module is set to", module, "and is of type", reflect.TypeOf(module))

	fmt.Println("module address", ptr)

	// dereferencja wskaźnika
	fmt.Println("module value", *ptr)
}
